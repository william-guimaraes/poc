"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The Profile model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/Profile
 * @version 9.14.0
 */
var Profile = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Profile</code>.
   * Object hosting user profile information.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/Profile
   */
  function Profile() {
    _classCallCheck(this, Profile);
    Profile.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(Profile, [{
    key: "getGivenName",
    value:
    /**
         * Returns The user's given name (first name).
         * @return {String}
         */
    function getGivenName() {
      return this.givenName;
    }

    /**
     * Sets The user's given name (first name).
     * @param {String} givenName The user's given name (first name).
     */
  }, {
    key: "setGivenName",
    value: function setGivenName(givenName) {
      this['givenName'] = givenName;
    }
    /**
         * Returns The user's surname (last name).
         * @return {String}
         */
  }, {
    key: "getSurname",
    value: function getSurname() {
      return this.surname;
    }

    /**
     * Sets The user's surname (last name).
     * @param {String} surname The user's surname (last name).
     */
  }, {
    key: "setSurname",
    value: function setSurname(surname) {
      this['surname'] = surname;
    }
    /**
         * Returns The user's email address.
         * @return {String}
         */
  }, {
    key: "getEmail",
    value: function getEmail() {
      return this.email;
    }

    /**
     * Sets The user's email address.
     * @param {String} email The user's email address.
     */
  }, {
    key: "setEmail",
    value: function setEmail(email) {
      this['email'] = email;
    }
    /**
         * Returns The user's avatar.
         * @return {String}
         */
  }, {
    key: "getAvatarUrl",
    value: function getAvatarUrl() {
      return this.avatarUrl;
    }

    /**
     * Sets The user's avatar.
     * @param {String} avatarUrl The user's avatar.
     */
  }, {
    key: "setAvatarUrl",
    value: function setAvatarUrl(avatarUrl) {
      this['avatarUrl'] = avatarUrl;
    }
    /**
         * Returns End-user's locale information in BCP 47 format.
         * @return {String}
         */
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.locale;
    }

    /**
     * Sets End-user's locale information in BCP 47 format.
     * @param {String} locale End-user's locale information in BCP 47 format.
     */
  }, {
    key: "setLocale",
    value: function setLocale(locale) {
      this['locale'] = locale;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>Profile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Profile} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Profile} The populated <code>Profile</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Profile();
        if (data.hasOwnProperty('givenName')) {
          obj['givenName'] = _ApiClient["default"].convertToType(data['givenName'], 'String');
        }
        if (data.hasOwnProperty('surname')) {
          obj['surname'] = _ApiClient["default"].convertToType(data['surname'], 'String');
        }
        if (data.hasOwnProperty('email')) {
          obj['email'] = _ApiClient["default"].convertToType(data['email'], 'String');
        }
        if (data.hasOwnProperty('avatarUrl')) {
          obj['avatarUrl'] = _ApiClient["default"].convertToType(data['avatarUrl'], 'String');
        }
        if (data.hasOwnProperty('locale')) {
          obj['locale'] = _ApiClient["default"].convertToType(data['locale'], 'String');
        }
      }
      return obj;
    }
  }]);
  return Profile;
}();
/**
 * The user's given name (first name).
 * @member {String} givenName
 */
Profile.prototype['givenName'] = undefined;

/**
 * The user's surname (last name).
 * @member {String} surname
 */
Profile.prototype['surname'] = undefined;

/**
 * The user's email address.
 * @member {String} email
 */
Profile.prototype['email'] = undefined;

/**
 * The user's avatar.
 * @member {String} avatarUrl
 */
Profile.prototype['avatarUrl'] = undefined;

/**
 * End-user's locale information in BCP 47 format.
 * @member {String} locale
 */
Profile.prototype['locale'] = undefined;
var _default = Profile;
exports["default"] = _default;