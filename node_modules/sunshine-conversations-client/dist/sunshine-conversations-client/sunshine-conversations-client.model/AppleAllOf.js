"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The AppleAllOf model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/AppleAllOf
 * @version 9.14.0
 */
var AppleAllOf = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>AppleAllOf</code>.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/AppleAllOf
   * @param businessId {String} Apple Business Chat ID.
   * @param apiSecret {String} Your Apple API secret which is tied to your Messaging Service Provider.
   * @param mspId {String} Your Messaging Service Provider ID.
   */
  function AppleAllOf(businessId, apiSecret, mspId) {
    _classCallCheck(this, AppleAllOf);
    AppleAllOf.initialize(this, businessId, apiSecret, mspId);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(AppleAllOf, [{
    key: "getType",
    value:
    /**
         * Returns To configure an Apple Business Chat integration, acquire the required information and call the Create Integration endpoint. 
         * @return {String}
         */
    function getType() {
      return this.type;
    }

    /**
     * Sets To configure an Apple Business Chat integration, acquire the required information and call the Create Integration endpoint. 
     * @param {String} type To configure an Apple Business Chat integration, acquire the required information and call the Create Integration endpoint. 
     */
  }, {
    key: "setType",
    value: function setType(type) {
      this['type'] = type;
    }
    /**
         * Returns Apple Business Chat ID.
         * @return {String}
         */
  }, {
    key: "getBusinessId",
    value: function getBusinessId() {
      return this.businessId;
    }

    /**
     * Sets Apple Business Chat ID.
     * @param {String} businessId Apple Business Chat ID.
     */
  }, {
    key: "setBusinessId",
    value: function setBusinessId(businessId) {
      this['businessId'] = businessId;
    }
    /**
         * Returns Your Apple API secret which is tied to your Messaging Service Provider.
         * @return {String}
         */
  }, {
    key: "getApiSecret",
    value: function getApiSecret() {
      return this.apiSecret;
    }

    /**
     * Sets Your Apple API secret which is tied to your Messaging Service Provider.
     * @param {String} apiSecret Your Apple API secret which is tied to your Messaging Service Provider.
     */
  }, {
    key: "setApiSecret",
    value: function setApiSecret(apiSecret) {
      this['apiSecret'] = apiSecret;
    }
    /**
         * Returns Your Messaging Service Provider ID.
         * @return {String}
         */
  }, {
    key: "getMspId",
    value: function getMspId() {
      return this.mspId;
    }

    /**
     * Sets Your Messaging Service Provider ID.
     * @param {String} mspId Your Messaging Service Provider ID.
     */
  }, {
    key: "setMspId",
    value: function setMspId(mspId) {
      this['mspId'] = mspId;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj, businessId, apiSecret, mspId) {
      obj['businessId'] = businessId;
      obj['apiSecret'] = apiSecret;
      obj['mspId'] = mspId;
    }

    /**
     * Constructs a <code>AppleAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/AppleAllOf} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/AppleAllOf} The populated <code>AppleAllOf</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new AppleAllOf();
        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
        if (data.hasOwnProperty('businessId')) {
          obj['businessId'] = _ApiClient["default"].convertToType(data['businessId'], 'String');
        }
        if (data.hasOwnProperty('apiSecret')) {
          obj['apiSecret'] = _ApiClient["default"].convertToType(data['apiSecret'], 'String');
        }
        if (data.hasOwnProperty('mspId')) {
          obj['mspId'] = _ApiClient["default"].convertToType(data['mspId'], 'String');
        }
      }
      return obj;
    }
  }]);
  return AppleAllOf;
}();
/**
 * To configure an Apple Business Chat integration, acquire the required information and call the Create Integration endpoint. 
 * @member {String} type
 * @default 'apple'
 */
AppleAllOf.prototype['type'] = 'apple';

/**
 * Apple Business Chat ID.
 * @member {String} businessId
 */
AppleAllOf.prototype['businessId'] = undefined;

/**
 * Your Apple API secret which is tied to your Messaging Service Provider.
 * @member {String} apiSecret
 */
AppleAllOf.prototype['apiSecret'] = undefined;

/**
 * Your Messaging Service Provider ID.
 * @member {String} mspId
 */
AppleAllOf.prototype['mspId'] = undefined;
var _default = AppleAllOf;
exports["default"] = _default;