"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _UserMergeEventAllOfPayloadMergedClients = _interopRequireDefault(require("./UserMergeEventAllOfPayloadMergedClients"));
var _UserMergeEventAllOfPayloadMergedConversations = _interopRequireDefault(require("./UserMergeEventAllOfPayloadMergedConversations"));
var _UserMergeEventAllOfPayloadMergedUsers = _interopRequireDefault(require("./UserMergeEventAllOfPayloadMergedUsers"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The UserMergeEventAllOfPayload model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload
 * @version 9.14.0
 */
var UserMergeEventAllOfPayload = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>UserMergeEventAllOfPayload</code>.
   * The payload of the event. The contents of this object depend on the type of event.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload
   */
  function UserMergeEventAllOfPayload() {
    _classCallCheck(this, UserMergeEventAllOfPayload);
    UserMergeEventAllOfPayload.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(UserMergeEventAllOfPayload, [{
    key: "getMergedUsers",
    value:
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedUsers}
         */
    function getMergedUsers() {
      return this.mergedUsers;
    }

    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedUsers} mergedUsers
     */
  }, {
    key: "setMergedUsers",
    value: function setMergedUsers(mergedUsers) {
      this['mergedUsers'] = mergedUsers;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedConversations}
         */
  }, {
    key: "getMergedConversations",
    value: function getMergedConversations() {
      return this.mergedConversations;
    }

    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedConversations} mergedConversations
     */
  }, {
    key: "setMergedConversations",
    value: function setMergedConversations(mergedConversations) {
      this['mergedConversations'] = mergedConversations;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedClients}
         */
  }, {
    key: "getMergedClients",
    value: function getMergedClients() {
      return this.mergedClients;
    }

    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedClients} mergedClients
     */
  }, {
    key: "setMergedClients",
    value: function setMergedClients(mergedClients) {
      this['mergedClients'] = mergedClients;
    }
    /**
         * Returns A flat object with the set of metadata properties that were discarded when merging the two users. This should contain values only if the combined metadata fields exceed the 4KB limit.
         * @return {Object}
         */
  }, {
    key: "getDiscardedMetadata",
    value: function getDiscardedMetadata() {
      return this.discardedMetadata;
    }

    /**
     * Sets A flat object with the set of metadata properties that were discarded when merging the two users. This should contain values only if the combined metadata fields exceed the 4KB limit.
     * @param {Object} discardedMetadata A flat object with the set of metadata properties that were discarded when merging the two users. This should contain values only if the combined metadata fields exceed the 4KB limit.
     */
  }, {
    key: "setDiscardedMetadata",
    value: function setDiscardedMetadata(discardedMetadata) {
      this['discardedMetadata'] = discardedMetadata;
    }
    /**
         * Returns The reason for which the users merged. * `api` - The users were merged using the API. * `channelLinking` - The users were merged as a result of initiating a channel link. * `sdkLogin` - The users were merged as a result of logging into an SDK device. 
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload.ReasonEnum}
         */
  }, {
    key: "getReason",
    value: function getReason() {
      return this.reason;
    }

    /**
     * Sets The reason for which the users merged. * `api` - The users were merged using the API. * `channelLinking` - The users were merged as a result of initiating a channel link. * `sdkLogin` - The users were merged as a result of logging into an SDK device. 
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload.ReasonEnum} reason The reason for which the users merged. * `api` - The users were merged using the API. * `channelLinking` - The users were merged as a result of initiating a channel link. * `sdkLogin` - The users were merged as a result of logging into an SDK device. 
     */
  }, {
    key: "setReason",
    value: function setReason(reason) {
      this['reason'] = reason;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>UserMergeEventAllOfPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload} The populated <code>UserMergeEventAllOfPayload</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new UserMergeEventAllOfPayload();
        if (data.hasOwnProperty('mergedUsers')) {
          obj['mergedUsers'] = _UserMergeEventAllOfPayloadMergedUsers["default"].constructFromObject(data['mergedUsers']);
        }
        if (data.hasOwnProperty('mergedConversations')) {
          obj['mergedConversations'] = _UserMergeEventAllOfPayloadMergedConversations["default"].constructFromObject(data['mergedConversations']);
        }
        if (data.hasOwnProperty('mergedClients')) {
          obj['mergedClients'] = _UserMergeEventAllOfPayloadMergedClients["default"].constructFromObject(data['mergedClients']);
        }
        if (data.hasOwnProperty('discardedMetadata')) {
          obj['discardedMetadata'] = _ApiClient["default"].convertToType(data['discardedMetadata'], Object);
        }
        if (data.hasOwnProperty('reason')) {
          obj['reason'] = _ApiClient["default"].convertToType(data['reason'], 'String');
        }
      }
      return obj;
    }
  }]);
  return UserMergeEventAllOfPayload;
}();
/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedUsers} mergedUsers
 */
UserMergeEventAllOfPayload.prototype['mergedUsers'] = undefined;

/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedConversations} mergedConversations
 */
UserMergeEventAllOfPayload.prototype['mergedConversations'] = undefined;

/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayloadMergedClients} mergedClients
 */
UserMergeEventAllOfPayload.prototype['mergedClients'] = undefined;

/**
 * A flat object with the set of metadata properties that were discarded when merging the two users. This should contain values only if the combined metadata fields exceed the 4KB limit.
 * @member {Object} discardedMetadata
 */
UserMergeEventAllOfPayload.prototype['discardedMetadata'] = undefined;

/**
 * The reason for which the users merged. * `api` - The users were merged using the API. * `channelLinking` - The users were merged as a result of initiating a channel link. * `sdkLogin` - The users were merged as a result of logging into an SDK device. 
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/UserMergeEventAllOfPayload.ReasonEnum} reason
 */
UserMergeEventAllOfPayload.prototype['reason'] = undefined;

/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
UserMergeEventAllOfPayload['ReasonEnum'] = {
  /**
   * value: "api"
   * @const
   */
  "api": "api",
  /**
   * value: "channelLinking"
   * @const
   */
  "channelLinking": "channelLinking",
  /**
   * value: "sdkLogin"
   * @const
   */
  "sdkLogin": "sdkLogin"
};
var _default = UserMergeEventAllOfPayload;
exports["default"] = _default;