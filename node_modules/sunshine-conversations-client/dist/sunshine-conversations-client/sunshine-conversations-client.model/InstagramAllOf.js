"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The InstagramAllOf model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/InstagramAllOf
 * @version 9.14.0
 */
var InstagramAllOf = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>InstagramAllOf</code>.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/InstagramAllOf
   * @param pageAccessToken {String} The Facebook Page Access Token of the Facebook page that is linked to your Instagram account.
   * @param appId {String} Your Facebook App ID.
   * @param appSecret {String} Your Facebook App secret.
   */
  function InstagramAllOf(pageAccessToken, appId, appSecret) {
    _classCallCheck(this, InstagramAllOf);
    InstagramAllOf.initialize(this, pageAccessToken, appId, appSecret);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(InstagramAllOf, [{
    key: "getType",
    value:
    /**
         * Returns Instagram Direct setup steps:   - Take note of your Facebook app ID and secret (apps can be created at [developer.facebook.com](https://developer.facebook.com));   - The Facebook app must have been submitted to Meta for app review with the \"pages_manage_metadata\" (to retrieve Page Access Tokens for the Pages and apps that the app user administers and to set a webhook), \"instagram_basic\", and \"instagram_manage_messages\" (to retrieve basic Instagram account information and send messages) permissions.   - In order to integrate an Instagram Direct app, you must acquire a Page Access Token from your user. Once you have acquired a page access token from your user, call the Create Integration endpoint with your app secret and ID and the user’s page access token. 
         * @return {String}
         */
    function getType() {
      return this.type;
    }

    /**
     * Sets Instagram Direct setup steps:   - Take note of your Facebook app ID and secret (apps can be created at [developer.facebook.com](https://developer.facebook.com));   - The Facebook app must have been submitted to Meta for app review with the \"pages_manage_metadata\" (to retrieve Page Access Tokens for the Pages and apps that the app user administers and to set a webhook), \"instagram_basic\", and \"instagram_manage_messages\" (to retrieve basic Instagram account information and send messages) permissions.   - In order to integrate an Instagram Direct app, you must acquire a Page Access Token from your user. Once you have acquired a page access token from your user, call the Create Integration endpoint with your app secret and ID and the user’s page access token. 
     * @param {String} type Instagram Direct setup steps:   - Take note of your Facebook app ID and secret (apps can be created at [developer.facebook.com](https://developer.facebook.com));   - The Facebook app must have been submitted to Meta for app review with the \"pages_manage_metadata\" (to retrieve Page Access Tokens for the Pages and apps that the app user administers and to set a webhook), \"instagram_basic\", and \"instagram_manage_messages\" (to retrieve basic Instagram account information and send messages) permissions.   - In order to integrate an Instagram Direct app, you must acquire a Page Access Token from your user. Once you have acquired a page access token from your user, call the Create Integration endpoint with your app secret and ID and the user’s page access token. 
     */
  }, {
    key: "setType",
    value: function setType(type) {
      this['type'] = type;
    }
    /**
         * Returns The Facebook Page Access Token of the Facebook page that is linked to your Instagram account.
         * @return {String}
         */
  }, {
    key: "getPageAccessToken",
    value: function getPageAccessToken() {
      return this.pageAccessToken;
    }

    /**
     * Sets The Facebook Page Access Token of the Facebook page that is linked to your Instagram account.
     * @param {String} pageAccessToken The Facebook Page Access Token of the Facebook page that is linked to your Instagram account.
     */
  }, {
    key: "setPageAccessToken",
    value: function setPageAccessToken(pageAccessToken) {
      this['pageAccessToken'] = pageAccessToken;
    }
    /**
         * Returns Your Facebook App ID.
         * @return {String}
         */
  }, {
    key: "getAppId",
    value: function getAppId() {
      return this.appId;
    }

    /**
     * Sets Your Facebook App ID.
     * @param {String} appId Your Facebook App ID.
     */
  }, {
    key: "setAppId",
    value: function setAppId(appId) {
      this['appId'] = appId;
    }
    /**
         * Returns Your Facebook App secret.
         * @return {String}
         */
  }, {
    key: "getAppSecret",
    value: function getAppSecret() {
      return this.appSecret;
    }

    /**
     * Sets Your Facebook App secret.
     * @param {String} appSecret Your Facebook App secret.
     */
  }, {
    key: "setAppSecret",
    value: function setAppSecret(appSecret) {
      this['appSecret'] = appSecret;
    }
    /**
         * Returns Your Instagram Business account name
         * @return {String}
         */
  }, {
    key: "getBusinessName",
    value: function getBusinessName() {
      return this.businessName;
    }

    /**
     * Sets Your Instagram Business account name
     * @param {String} businessName Your Instagram Business account name
     */
  }, {
    key: "setBusinessName",
    value: function setBusinessName(businessName) {
      this['businessName'] = businessName;
    }
    /**
         * Returns Your Instagram Business unique username
         * @return {String}
         */
  }, {
    key: "getBusinessUsername",
    value: function getBusinessUsername() {
      return this.businessUsername;
    }

    /**
     * Sets Your Instagram Business unique username
     * @param {String} businessUsername Your Instagram Business unique username
     */
  }, {
    key: "setBusinessUsername",
    value: function setBusinessUsername(businessUsername) {
      this['businessUsername'] = businessUsername;
    }
    /**
         * Returns The ID of the Facebook Page linked to your Instagram Business account
         * @return {String}
         */
  }, {
    key: "getPageId",
    value: function getPageId() {
      return this.pageId;
    }

    /**
     * Sets The ID of the Facebook Page linked to your Instagram Business account
     * @param {String} pageId The ID of the Facebook Page linked to your Instagram Business account
     */
  }, {
    key: "setPageId",
    value: function setPageId(pageId) {
      this['pageId'] = pageId;
    }
    /**
         * Returns The ID of the Instagram Business account
         * @return {String}
         */
  }, {
    key: "getBusinessId",
    value: function getBusinessId() {
      return this.businessId;
    }

    /**
     * Sets The ID of the Instagram Business account
     * @param {String} businessId The ID of the Instagram Business account
     */
  }, {
    key: "setBusinessId",
    value: function setBusinessId(businessId) {
      this['businessId'] = businessId;
    }
    /**
         * Returns The Facebook user's username. This is returned when integrating through the Dashboard
         * @return {String}
         */
  }, {
    key: "getUsername",
    value: function getUsername() {
      return this.username;
    }

    /**
     * Sets The Facebook user's username. This is returned when integrating through the Dashboard
     * @param {String} username The Facebook user's username. This is returned when integrating through the Dashboard
     */
  }, {
    key: "setUsername",
    value: function setUsername(username) {
      this['username'] = username;
    }
    /**
         * Returns The Facebook user's user ID. This is returned when integrating through the Dashboard
         * @return {String}
         */
  }, {
    key: "getUserId",
    value: function getUserId() {
      return this.userId;
    }

    /**
     * Sets The Facebook user's user ID. This is returned when integrating through the Dashboard
     * @param {String} userId The Facebook user's user ID. This is returned when integrating through the Dashboard
     */
  }, {
    key: "setUserId",
    value: function setUserId(userId) {
      this['userId'] = userId;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj, pageAccessToken, appId, appSecret) {
      obj['pageAccessToken'] = pageAccessToken;
      obj['appId'] = appId;
      obj['appSecret'] = appSecret;
    }

    /**
     * Constructs a <code>InstagramAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/InstagramAllOf} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/InstagramAllOf} The populated <code>InstagramAllOf</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new InstagramAllOf();
        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
        if (data.hasOwnProperty('pageAccessToken')) {
          obj['pageAccessToken'] = _ApiClient["default"].convertToType(data['pageAccessToken'], 'String');
        }
        if (data.hasOwnProperty('appId')) {
          obj['appId'] = _ApiClient["default"].convertToType(data['appId'], 'String');
        }
        if (data.hasOwnProperty('appSecret')) {
          obj['appSecret'] = _ApiClient["default"].convertToType(data['appSecret'], 'String');
        }
        if (data.hasOwnProperty('businessName')) {
          obj['businessName'] = _ApiClient["default"].convertToType(data['businessName'], 'String');
        }
        if (data.hasOwnProperty('businessUsername')) {
          obj['businessUsername'] = _ApiClient["default"].convertToType(data['businessUsername'], 'String');
        }
        if (data.hasOwnProperty('pageId')) {
          obj['pageId'] = _ApiClient["default"].convertToType(data['pageId'], 'String');
        }
        if (data.hasOwnProperty('businessId')) {
          obj['businessId'] = _ApiClient["default"].convertToType(data['businessId'], 'String');
        }
        if (data.hasOwnProperty('username')) {
          obj['username'] = _ApiClient["default"].convertToType(data['username'], 'String');
        }
        if (data.hasOwnProperty('userId')) {
          obj['userId'] = _ApiClient["default"].convertToType(data['userId'], 'String');
        }
      }
      return obj;
    }
  }]);
  return InstagramAllOf;
}();
/**
 * Instagram Direct setup steps:   - Take note of your Facebook app ID and secret (apps can be created at [developer.facebook.com](https://developer.facebook.com));   - The Facebook app must have been submitted to Meta for app review with the \"pages_manage_metadata\" (to retrieve Page Access Tokens for the Pages and apps that the app user administers and to set a webhook), \"instagram_basic\", and \"instagram_manage_messages\" (to retrieve basic Instagram account information and send messages) permissions.   - In order to integrate an Instagram Direct app, you must acquire a Page Access Token from your user. Once you have acquired a page access token from your user, call the Create Integration endpoint with your app secret and ID and the user’s page access token. 
 * @member {String} type
 * @default 'instagram'
 */
InstagramAllOf.prototype['type'] = 'instagram';

/**
 * The Facebook Page Access Token of the Facebook page that is linked to your Instagram account.
 * @member {String} pageAccessToken
 */
InstagramAllOf.prototype['pageAccessToken'] = undefined;

/**
 * Your Facebook App ID.
 * @member {String} appId
 */
InstagramAllOf.prototype['appId'] = undefined;

/**
 * Your Facebook App secret.
 * @member {String} appSecret
 */
InstagramAllOf.prototype['appSecret'] = undefined;

/**
 * Your Instagram Business account name
 * @member {String} businessName
 */
InstagramAllOf.prototype['businessName'] = undefined;

/**
 * Your Instagram Business unique username
 * @member {String} businessUsername
 */
InstagramAllOf.prototype['businessUsername'] = undefined;

/**
 * The ID of the Facebook Page linked to your Instagram Business account
 * @member {String} pageId
 */
InstagramAllOf.prototype['pageId'] = undefined;

/**
 * The ID of the Instagram Business account
 * @member {String} businessId
 */
InstagramAllOf.prototype['businessId'] = undefined;

/**
 * The Facebook user's username. This is returned when integrating through the Dashboard
 * @member {String} username
 */
InstagramAllOf.prototype['username'] = undefined;

/**
 * The Facebook user's user ID. This is returned when integrating through the Dashboard
 * @member {String} userId
 */
InstagramAllOf.prototype['userId'] = undefined;
var _default = InstagramAllOf;
exports["default"] = _default;