"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _IntegrationUpdateBase = _interopRequireDefault(require("./IntegrationUpdateBase"));
var _IosUpdateAllOf = _interopRequireDefault(require("./IosUpdateAllOf"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The IosUpdate model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/IosUpdate
 * @version 9.14.0
 */
var IosUpdate = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>IosUpdate</code>.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/IosUpdate
   * @implements module:sunshine-conversations-client/sunshine-conversations-client.model/IntegrationUpdateBase
   * @implements module:sunshine-conversations-client/sunshine-conversations-client.model/IosUpdateAllOf
   */
  function IosUpdate() {
    _classCallCheck(this, IosUpdate);
    _IntegrationUpdateBase["default"].initialize(this);
    _IosUpdateAllOf["default"].initialize(this);
    IosUpdate.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(IosUpdate, [{
    key: "getDisplayName",
    value:
    /**
         * Returns A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
         * @return {String}
         */
    function getDisplayName() {
      return this.displayName;
    }

    /**
     * Sets A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
     * @param {String} displayName A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
     */
  }, {
    key: "setDisplayName",
    value: function setDisplayName(displayName) {
      this['displayName'] = displayName;
    }
    /**
         * Returns The binary of your APN certificate base64 encoded.
         * @return {String}
         */
  }, {
    key: "getCertificate",
    value: function getCertificate() {
      return this.certificate;
    }

    /**
     * Sets The binary of your APN certificate base64 encoded.
     * @param {String} certificate The binary of your APN certificate base64 encoded.
     */
  }, {
    key: "setCertificate",
    value: function setCertificate(certificate) {
      this['certificate'] = certificate;
    }
    /**
         * Returns The password for your APN certificate.
         * @return {String}
         */
  }, {
    key: "getPassword",
    value: function getPassword() {
      return this.password;
    }

    /**
     * Sets The password for your APN certificate.
     * @param {String} password The password for your APN certificate.
     */
  }, {
    key: "setPassword",
    value: function setPassword(password) {
      this['password'] = password;
    }
    /**
         * Returns The APN environment to connect to (Production, if true, or Sandbox). Defaults to value inferred from certificate if not specified.
         * @return {Boolean}
         */
  }, {
    key: "getProduction",
    value: function getProduction() {
      return this.production;
    }

    /**
     * Sets The APN environment to connect to (Production, if true, or Sandbox). Defaults to value inferred from certificate if not specified.
     * @param {Boolean} production The APN environment to connect to (Production, if true, or Sandbox). Defaults to value inferred from certificate if not specified.
     */
  }, {
    key: "setProduction",
    value: function setProduction(production) {
      this['production'] = production;
    }
    /**
         * Returns Use the unread count of the conversation as the application badge.
         * @return {Boolean}
         */
  }, {
    key: "getAutoUpdateBadge",
    value: function getAutoUpdateBadge() {
      return this.autoUpdateBadge;
    }

    /**
     * Sets Use the unread count of the conversation as the application badge.
     * @param {Boolean} autoUpdateBadge Use the unread count of the conversation as the application badge.
     */
  }, {
    key: "setAutoUpdateBadge",
    value: function setAutoUpdateBadge(autoUpdateBadge) {
      this['autoUpdateBadge'] = autoUpdateBadge;
    }
    /**
         * Returns Allows users to create more than one conversation on the iOS integration.
         * @return {Boolean}
         */
  }, {
    key: "getCanUserCreateMoreConversations",
    value: function getCanUserCreateMoreConversations() {
      return this.canUserCreateMoreConversations;
    }

    /**
     * Sets Allows users to create more than one conversation on the iOS integration.
     * @param {Boolean} canUserCreateMoreConversations Allows users to create more than one conversation on the iOS integration.
     */
  }, {
    key: "setCanUserCreateMoreConversations",
    value: function setCanUserCreateMoreConversations(canUserCreateMoreConversations) {
      this['canUserCreateMoreConversations'] = canUserCreateMoreConversations;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>IosUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/IosUpdate} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/IosUpdate} The populated <code>IosUpdate</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new IosUpdate();
        _IntegrationUpdateBase["default"].constructFromObject(data, obj);
        _IosUpdateAllOf["default"].constructFromObject(data, obj);
        if (data.hasOwnProperty('displayName')) {
          obj['displayName'] = _ApiClient["default"].convertToType(data['displayName'], 'String');
        }
        if (data.hasOwnProperty('certificate')) {
          obj['certificate'] = _ApiClient["default"].convertToType(data['certificate'], 'String');
        }
        if (data.hasOwnProperty('password')) {
          obj['password'] = _ApiClient["default"].convertToType(data['password'], 'String');
        }
        if (data.hasOwnProperty('production')) {
          obj['production'] = _ApiClient["default"].convertToType(data['production'], 'Boolean');
        }
        if (data.hasOwnProperty('autoUpdateBadge')) {
          obj['autoUpdateBadge'] = _ApiClient["default"].convertToType(data['autoUpdateBadge'], 'Boolean');
        }
        if (data.hasOwnProperty('canUserCreateMoreConversations')) {
          obj['canUserCreateMoreConversations'] = _ApiClient["default"].convertToType(data['canUserCreateMoreConversations'], 'Boolean');
        }
      }
      return obj;
    }
  }]);
  return IosUpdate;
}();
/**
 * A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
 * @member {String} displayName
 */
IosUpdate.prototype['displayName'] = undefined;

/**
 * The binary of your APN certificate base64 encoded.
 * @member {String} certificate
 */
IosUpdate.prototype['certificate'] = undefined;

/**
 * The password for your APN certificate.
 * @member {String} password
 */
IosUpdate.prototype['password'] = undefined;

/**
 * The APN environment to connect to (Production, if true, or Sandbox). Defaults to value inferred from certificate if not specified.
 * @member {Boolean} production
 */
IosUpdate.prototype['production'] = undefined;

/**
 * Use the unread count of the conversation as the application badge.
 * @member {Boolean} autoUpdateBadge
 */
IosUpdate.prototype['autoUpdateBadge'] = undefined;

/**
 * Allows users to create more than one conversation on the iOS integration.
 * @member {Boolean} canUserCreateMoreConversations
 */
IosUpdate.prototype['canUserCreateMoreConversations'] = undefined;

// Implement IntegrationUpdateBase interface:
/**
 * A human-friendly name used to identify the integration. `displayName` can be unset by changing it to `null`.
 * @member {String} displayName
 */
_IntegrationUpdateBase["default"].prototype['displayName'] = undefined;
// Implement IosUpdateAllOf interface:
/**
 * The binary of your APN certificate base64 encoded.
 * @member {String} certificate
 */
_IosUpdateAllOf["default"].prototype['certificate'] = undefined;
/**
 * The password for your APN certificate.
 * @member {String} password
 */
_IosUpdateAllOf["default"].prototype['password'] = undefined;
/**
 * The APN environment to connect to (Production, if true, or Sandbox). Defaults to value inferred from certificate if not specified.
 * @member {Boolean} production
 */
_IosUpdateAllOf["default"].prototype['production'] = undefined;
/**
 * Use the unread count of the conversation as the application badge.
 * @member {Boolean} autoUpdateBadge
 */
_IosUpdateAllOf["default"].prototype['autoUpdateBadge'] = undefined;
/**
 * Allows users to create more than one conversation on the iOS integration.
 * @member {Boolean} canUserCreateMoreConversations
 */
_IosUpdateAllOf["default"].prototype['canUserCreateMoreConversations'] = undefined;
var _default = IosUpdate;
exports["default"] = _default;