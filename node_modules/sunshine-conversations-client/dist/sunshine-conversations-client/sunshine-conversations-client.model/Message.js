"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _Author = _interopRequireDefault(require("./Author"));
var _Content = _interopRequireDefault(require("./Content"));
var _QuotedMessage = _interopRequireDefault(require("./QuotedMessage"));
var _Source = _interopRequireDefault(require("./Source"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The Message model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/Message
 * @version 9.14.0
 */
var Message = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Message</code>.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/Message
   */
  function Message() {
    _classCallCheck(this, Message);
    Message.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(Message, [{
    key: "getId",
    value:
    /**
         * Returns The unique ID of the message.
         * @return {String}
         */
    function getId() {
      return this.id;
    }

    /**
     * Sets The unique ID of the message.
     * @param {String} id The unique ID of the message.
     */
  }, {
    key: "setId",
    value: function setId(id) {
      this['id'] = id;
    }
    /**
         * Returns A datetime string with the format `YYYY-MM-DDThh:mm:ss.SSSZ` representing when Sunshine Conversations received the message.
         * @return {String}
         */
  }, {
    key: "getReceived",
    value: function getReceived() {
      return this.received;
    }

    /**
     * Sets A datetime string with the format `YYYY-MM-DDThh:mm:ss.SSSZ` representing when Sunshine Conversations received the message.
     * @param {String} received A datetime string with the format `YYYY-MM-DDThh:mm:ss.SSSZ` representing when Sunshine Conversations received the message.
     */
  }, {
    key: "setReceived",
    value: function setReceived(received) {
      this['received'] = received;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Author}
         */
  }, {
    key: "getAuthor",
    value: function getAuthor() {
      return this.author;
    }

    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Author} author
     */
  }, {
    key: "setAuthor",
    value: function setAuthor(author) {
      this['author'] = author;
    }
    /**
         * Returns The content of the message.
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Content}
         */
  }, {
    key: "getContent",
    value: function getContent() {
      return this.content;
    }

    /**
     * Sets The content of the message.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Content} content The content of the message.
     */
  }, {
    key: "setContent",
    value: function setContent(content) {
      this['content'] = content;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Source}
         */
  }, {
    key: "getSource",
    value: function getSource() {
      return this.source;
    }

    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Source} source
     */
  }, {
    key: "setSource",
    value: function setSource(source) {
      this['source'] = source;
    }
    /**
         * Returns The quoted message is currently only available for WhatsApp and Web Messenger `formResponse` messages.
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/QuotedMessage}
         */
  }, {
    key: "getQuotedMessage",
    value: function getQuotedMessage() {
      return this.quotedMessage;
    }

    /**
     * Sets The quoted message is currently only available for WhatsApp and Web Messenger `formResponse` messages.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/QuotedMessage} quotedMessage The quoted message is currently only available for WhatsApp and Web Messenger `formResponse` messages.
     */
  }, {
    key: "setQuotedMessage",
    value: function setQuotedMessage(quotedMessage) {
      this['quotedMessage'] = quotedMessage;
    }
    /**
         * @return {Object}
         */
  }, {
    key: "getMetadata",
    value: function getMetadata() {
      return this.metadata;
    }

    /**
     * @param {Object} metadata
     */
  }, {
    key: "setMetadata",
    value: function setMetadata(metadata) {
      this['metadata'] = metadata;
    }
    /**
         * Returns true if the message serves as a placeholder for one that has been deleted.
         * @return {Boolean}
         */
  }, {
    key: "getDeleted",
    value: function getDeleted() {
      return this.deleted;
    }

    /**
     * Sets true if the message serves as a placeholder for one that has been deleted.
     * @param {Boolean} deleted true if the message serves as a placeholder for one that has been deleted.
     */
  }, {
    key: "setDeleted",
    value: function setDeleted(deleted) {
      this['deleted'] = deleted;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>Message</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Message} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Message} The populated <code>Message</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Message();
        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'String');
        }
        if (data.hasOwnProperty('received')) {
          obj['received'] = _ApiClient["default"].convertToType(data['received'], 'String');
        }
        if (data.hasOwnProperty('author')) {
          obj['author'] = _Author["default"].constructFromObject(data['author']);
        }
        if (data.hasOwnProperty('content')) {
          obj['content'] = _ApiClient["default"].convertToType(data['content'], _Content["default"]);
        }
        if (data.hasOwnProperty('source')) {
          obj['source'] = _Source["default"].constructFromObject(data['source']);
        }
        if (data.hasOwnProperty('quotedMessage')) {
          obj['quotedMessage'] = _ApiClient["default"].convertToType(data['quotedMessage'], _QuotedMessage["default"]);
        }
        if (data.hasOwnProperty('metadata')) {
          obj['metadata'] = _ApiClient["default"].convertToType(data['metadata'], Object);
        }
        if (data.hasOwnProperty('deleted')) {
          obj['deleted'] = _ApiClient["default"].convertToType(data['deleted'], 'Boolean');
        }
      }
      return obj;
    }
  }]);
  return Message;
}();
/**
 * The unique ID of the message.
 * @member {String} id
 */
Message.prototype['id'] = undefined;

/**
 * A datetime string with the format `YYYY-MM-DDThh:mm:ss.SSSZ` representing when Sunshine Conversations received the message.
 * @member {String} received
 */
Message.prototype['received'] = undefined;

/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/Author} author
 */
Message.prototype['author'] = undefined;

/**
 * The content of the message.
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/Content} content
 */
Message.prototype['content'] = undefined;

/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/Source} source
 */
Message.prototype['source'] = undefined;

/**
 * The quoted message is currently only available for WhatsApp and Web Messenger `formResponse` messages.
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/QuotedMessage} quotedMessage
 */
Message.prototype['quotedMessage'] = undefined;

/**
 * @member {Object} metadata
 */
Message.prototype['metadata'] = undefined;

/**
 * true if the message serves as a placeholder for one that has been deleted.
 * @member {Boolean} deleted
 */
Message.prototype['deleted'] = undefined;
var _default = Message;
exports["default"] = _default;