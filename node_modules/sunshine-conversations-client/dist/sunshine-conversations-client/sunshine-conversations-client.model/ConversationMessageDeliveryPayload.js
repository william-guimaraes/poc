"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ConversationMessageDeliveryPayloadDestination = _interopRequireDefault(require("./ConversationMessageDeliveryPayloadDestination"));
var _ConversationMessageDeliveryPayloadExternalMessages = _interopRequireDefault(require("./ConversationMessageDeliveryPayloadExternalMessages"));
var _ConversationMessageDeliveryPayloadMessage = _interopRequireDefault(require("./ConversationMessageDeliveryPayloadMessage"));
var _ConversationTruncated = _interopRequireDefault(require("./ConversationTruncated"));
var _User = _interopRequireDefault(require("./User"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The ConversationMessageDeliveryPayload model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayload
 * @version 9.14.0
 */
var ConversationMessageDeliveryPayload = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ConversationMessageDeliveryPayload</code>.
   * The payload of the event. The contents of this object depend on the type of event.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayload
   */
  function ConversationMessageDeliveryPayload() {
    _classCallCheck(this, ConversationMessageDeliveryPayload);
    ConversationMessageDeliveryPayload.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(ConversationMessageDeliveryPayload, [{
    key: "getUser",
    value:
    /**
         * Returns The user associated with the conversation.
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/User}
         */
    function getUser() {
      return this.user;
    }

    /**
     * Sets The user associated with the conversation.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/User} user The user associated with the conversation.
     */
  }, {
    key: "setUser",
    value: function setUser(user) {
      this['user'] = user;
    }
    /**
         * Returns The conversation in which the message was sent.
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationTruncated}
         */
  }, {
    key: "getConversation",
    value: function getConversation() {
      return this.conversation;
    }

    /**
     * Sets The conversation in which the message was sent.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationTruncated} conversation The conversation in which the message was sent.
     */
  }, {
    key: "setConversation",
    value: function setConversation(conversation) {
      this['conversation'] = conversation;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadMessage}
         */
  }, {
    key: "getMessage",
    value: function getMessage() {
      return this.message;
    }

    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadMessage} message
     */
  }, {
    key: "setMessage",
    value: function setMessage(message) {
      this['message'] = message;
    }
    /**
         * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadDestination}
         */
  }, {
    key: "getDestination",
    value: function getDestination() {
      return this.destination;
    }

    /**
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadDestination} destination
     */
  }, {
    key: "setDestination",
    value: function setDestination(destination) {
      this['destination'] = destination;
    }
    /**
         * Returns An array of objects representing the third-party messages associated with the event. The order of the external messages is not guaranteed to be the same across the different triggers. Note that some channels don’t expose message IDs, in which case this field will be unset.
         * @return {Array.<module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadExternalMessages>}
         */
  }, {
    key: "getExternalMessages",
    value: function getExternalMessages() {
      return this.externalMessages;
    }

    /**
     * Sets An array of objects representing the third-party messages associated with the event. The order of the external messages is not guaranteed to be the same across the different triggers. Note that some channels don’t expose message IDs, in which case this field will be unset.
     * @param {Array.<module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadExternalMessages>} externalMessages An array of objects representing the third-party messages associated with the event. The order of the external messages is not guaranteed to be the same across the different triggers. Note that some channels don’t expose message IDs, in which case this field will be unset.
     */
  }, {
    key: "setExternalMessages",
    value: function setExternalMessages(externalMessages) {
      this['externalMessages'] = externalMessages;
    }
    /**
         * Returns A boolean indicating whether the webhook is the final one for the `message.id` and `destination.type` pair.
         * @return {Boolean}
         */
  }, {
    key: "getIsFinalEvent",
    value: function getIsFinalEvent() {
      return this.isFinalEvent;
    }

    /**
     * Sets A boolean indicating whether the webhook is the final one for the `message.id` and `destination.type` pair.
     * @param {Boolean} isFinalEvent A boolean indicating whether the webhook is the final one for the `message.id` and `destination.type` pair.
     */
  }, {
    key: "setIsFinalEvent",
    value: function setIsFinalEvent(isFinalEvent) {
      this['isFinalEvent'] = isFinalEvent;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>ConversationMessageDeliveryPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayload} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayload} The populated <code>ConversationMessageDeliveryPayload</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ConversationMessageDeliveryPayload();
        if (data.hasOwnProperty('user')) {
          obj['user'] = _ApiClient["default"].convertToType(data['user'], _User["default"]);
        }
        if (data.hasOwnProperty('conversation')) {
          obj['conversation'] = _ApiClient["default"].convertToType(data['conversation'], _ConversationTruncated["default"]);
        }
        if (data.hasOwnProperty('message')) {
          obj['message'] = _ConversationMessageDeliveryPayloadMessage["default"].constructFromObject(data['message']);
        }
        if (data.hasOwnProperty('destination')) {
          obj['destination'] = _ConversationMessageDeliveryPayloadDestination["default"].constructFromObject(data['destination']);
        }
        if (data.hasOwnProperty('externalMessages')) {
          obj['externalMessages'] = _ApiClient["default"].convertToType(data['externalMessages'], [_ConversationMessageDeliveryPayloadExternalMessages["default"]]);
        }
        if (data.hasOwnProperty('isFinalEvent')) {
          obj['isFinalEvent'] = _ApiClient["default"].convertToType(data['isFinalEvent'], 'Boolean');
        }
      }
      return obj;
    }
  }]);
  return ConversationMessageDeliveryPayload;
}();
/**
 * The user associated with the conversation.
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/User} user
 */
ConversationMessageDeliveryPayload.prototype['user'] = undefined;

/**
 * The conversation in which the message was sent.
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationTruncated} conversation
 */
ConversationMessageDeliveryPayload.prototype['conversation'] = undefined;

/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadMessage} message
 */
ConversationMessageDeliveryPayload.prototype['message'] = undefined;

/**
 * @member {module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadDestination} destination
 */
ConversationMessageDeliveryPayload.prototype['destination'] = undefined;

/**
 * An array of objects representing the third-party messages associated with the event. The order of the external messages is not guaranteed to be the same across the different triggers. Note that some channels don’t expose message IDs, in which case this field will be unset.
 * @member {Array.<module:sunshine-conversations-client/sunshine-conversations-client.model/ConversationMessageDeliveryPayloadExternalMessages>} externalMessages
 */
ConversationMessageDeliveryPayload.prototype['externalMessages'] = undefined;

/**
 * A boolean indicating whether the webhook is the final one for the `message.id` and `destination.type` pair.
 * @member {Boolean} isFinalEvent
 */
ConversationMessageDeliveryPayload.prototype['isFinalEvent'] = undefined;
var _default = ConversationMessageDeliveryPayload;
exports["default"] = _default;