"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The Meta model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/Meta
 * @version 9.14.0
 */
var Meta = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Meta</code>.
   * Response metadata.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/Meta
   */
  function Meta() {
    _classCallCheck(this, Meta);
    Meta.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(Meta, [{
    key: "getHasMore",
    value:
    /**
         * Returns A flag that indicates if there are more records that can be fetched.
         * @return {Boolean}
         */
    function getHasMore() {
      return this.hasMore;
    }

    /**
     * Sets A flag that indicates if there are more records that can be fetched.
     * @param {Boolean} hasMore A flag that indicates if there are more records that can be fetched.
     */
  }, {
    key: "setHasMore",
    value: function setHasMore(hasMore) {
      this['hasMore'] = hasMore;
    }
    /**
         * Returns A record id that can be used as a `page[after]` parameter in a new request to get the next page.  Not specified if there are no subsequent pages. 
         * @return {String}
         */
  }, {
    key: "getAfterCursor",
    value: function getAfterCursor() {
      return this.afterCursor;
    }

    /**
     * Sets A record id that can be used as a `page[after]` parameter in a new request to get the next page.  Not specified if there are no subsequent pages. 
     * @param {String} afterCursor A record id that can be used as a `page[after]` parameter in a new request to get the next page.  Not specified if there are no subsequent pages. 
     */
  }, {
    key: "setAfterCursor",
    value: function setAfterCursor(afterCursor) {
      this['afterCursor'] = afterCursor;
    }
    /**
         * Returns A record id that can be used as a `page[before]` parameter in a new request to get the previous page.  Not specified if there are no previous pages. 
         * @return {String}
         */
  }, {
    key: "getBeforeCursor",
    value: function getBeforeCursor() {
      return this.beforeCursor;
    }

    /**
     * Sets A record id that can be used as a `page[before]` parameter in a new request to get the previous page.  Not specified if there are no previous pages. 
     * @param {String} beforeCursor A record id that can be used as a `page[before]` parameter in a new request to get the previous page.  Not specified if there are no previous pages. 
     */
  }, {
    key: "setBeforeCursor",
    value: function setBeforeCursor(beforeCursor) {
      this['beforeCursor'] = beforeCursor;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>Meta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/Meta} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/Meta} The populated <code>Meta</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Meta();
        if (data.hasOwnProperty('hasMore')) {
          obj['hasMore'] = _ApiClient["default"].convertToType(data['hasMore'], 'Boolean');
        }
        if (data.hasOwnProperty('afterCursor')) {
          obj['afterCursor'] = _ApiClient["default"].convertToType(data['afterCursor'], 'String');
        }
        if (data.hasOwnProperty('beforeCursor')) {
          obj['beforeCursor'] = _ApiClient["default"].convertToType(data['beforeCursor'], 'String');
        }
      }
      return obj;
    }
  }]);
  return Meta;
}();
/**
 * A flag that indicates if there are more records that can be fetched.
 * @member {Boolean} hasMore
 */
Meta.prototype['hasMore'] = undefined;

/**
 * A record id that can be used as a `page[after]` parameter in a new request to get the next page.  Not specified if there are no subsequent pages. 
 * @member {String} afterCursor
 */
Meta.prototype['afterCursor'] = undefined;

/**
 * A record id that can be used as a `page[before]` parameter in a new request to get the previous page.  Not specified if there are no previous pages. 
 * @member {String} beforeCursor
 */
Meta.prototype['beforeCursor'] = undefined;
var _default = Meta;
exports["default"] = _default;