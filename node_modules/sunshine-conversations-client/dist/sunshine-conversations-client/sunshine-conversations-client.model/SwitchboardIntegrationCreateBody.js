"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * Sunshine Conversations API
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 9.12.0
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * OpenAPI Generator version: 4.3.1
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The SwitchboardIntegrationCreateBody model module.
 * @module sunshine-conversations-client/sunshine-conversations-client.model/SwitchboardIntegrationCreateBody
 * @version 9.14.0
 */
var SwitchboardIntegrationCreateBody = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>SwitchboardIntegrationCreateBody</code>.
   * @alias module:sunshine-conversations-client/sunshine-conversations-client.model/SwitchboardIntegrationCreateBody
   * @param name {String} Identifier for use in control transfer protocols. Restricted to alphanumeric characters, `-` and `_`.
   */
  function SwitchboardIntegrationCreateBody(name) {
    _classCallCheck(this, SwitchboardIntegrationCreateBody);
    SwitchboardIntegrationCreateBody.initialize(this, name);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(SwitchboardIntegrationCreateBody, [{
    key: "getName",
    value:
    /**
         * Returns Identifier for use in control transfer protocols. Restricted to alphanumeric characters, `-` and `_`.
         * @return {String}
         */
    function getName() {
      return this.name;
    }

    /**
     * Sets Identifier for use in control transfer protocols. Restricted to alphanumeric characters, `-` and `_`.
     * @param {String} name Identifier for use in control transfer protocols. Restricted to alphanumeric characters, `-` and `_`.
     */
  }, {
    key: "setName",
    value: function setName(name) {
      this['name'] = name;
    }
    /**
         * Returns The id of the integration to link to the switchboard integration. Must be used when linking a custom integration. One of `integrationId` or `integrationType` must be provided.
         * @return {String}
         */
  }, {
    key: "getIntegrationId",
    value: function getIntegrationId() {
      return this.integrationId;
    }

    /**
     * Sets The id of the integration to link to the switchboard integration. Must be used when linking a custom integration. One of `integrationId` or `integrationType` must be provided.
     * @param {String} integrationId The id of the integration to link to the switchboard integration. Must be used when linking a custom integration. One of `integrationId` or `integrationType` must be provided.
     */
  }, {
    key: "setIntegrationId",
    value: function setIntegrationId(integrationId) {
      this['integrationId'] = integrationId;
    }
    /**
         * Returns The type of the integration to link to the switchboard integration. Must be used when linking an OAuth integration. One of `integrationId` or `integrationType` must be provided.
         * @return {String}
         */
  }, {
    key: "getIntegrationType",
    value: function getIntegrationType() {
      return this.integrationType;
    }

    /**
     * Sets The type of the integration to link to the switchboard integration. Must be used when linking an OAuth integration. One of `integrationId` or `integrationType` must be provided.
     * @param {String} integrationType The type of the integration to link to the switchboard integration. Must be used when linking an OAuth integration. One of `integrationId` or `integrationType` must be provided.
     */
  }, {
    key: "setIntegrationType",
    value: function setIntegrationType(integrationType) {
      this['integrationType'] = integrationType;
    }
    /**
         * @return {Boolean}
         */
  }, {
    key: "getDeliverStandbyEvents",
    value: function getDeliverStandbyEvents() {
      return this.deliverStandbyEvents;
    }

    /**
     * @param {Boolean} deliverStandbyEvents
     */
  }, {
    key: "setDeliverStandbyEvents",
    value: function setDeliverStandbyEvents(deliverStandbyEvents) {
      this['deliverStandbyEvents'] = deliverStandbyEvents;
    }
    /**
         * @return {String}
         */
  }, {
    key: "getNextSwitchboardIntegrationId",
    value: function getNextSwitchboardIntegrationId() {
      return this.nextSwitchboardIntegrationId;
    }

    /**
     * @param {String} nextSwitchboardIntegrationId
     */
  }, {
    key: "setNextSwitchboardIntegrationId",
    value: function setNextSwitchboardIntegrationId(nextSwitchboardIntegrationId) {
      this['nextSwitchboardIntegrationId'] = nextSwitchboardIntegrationId;
    }
    /**
         * Returns Number of messages to include in the message history context.
         * minimum: 1
         * maximum: 10
         * @return {Number}
         */
  }, {
    key: "getMessageHistoryCount",
    value: function getMessageHistoryCount() {
      return this.messageHistoryCount;
    }

    /**
     * Sets Number of messages to include in the message history context.
     * @param {Number} messageHistoryCount Number of messages to include in the message history context.
     */
  }, {
    key: "setMessageHistoryCount",
    value: function setMessageHistoryCount(messageHistoryCount) {
      this['messageHistoryCount'] = messageHistoryCount;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj, name) {
      obj['name'] = name;
    }

    /**
     * Constructs a <code>SwitchboardIntegrationCreateBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sunshine-conversations-client/sunshine-conversations-client.model/SwitchboardIntegrationCreateBody} obj Optional instance to populate.
     * @return {module:sunshine-conversations-client/sunshine-conversations-client.model/SwitchboardIntegrationCreateBody} The populated <code>SwitchboardIntegrationCreateBody</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new SwitchboardIntegrationCreateBody();
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('integrationId')) {
          obj['integrationId'] = _ApiClient["default"].convertToType(data['integrationId'], 'String');
        }
        if (data.hasOwnProperty('integrationType')) {
          obj['integrationType'] = _ApiClient["default"].convertToType(data['integrationType'], 'String');
        }
        if (data.hasOwnProperty('deliverStandbyEvents')) {
          obj['deliverStandbyEvents'] = _ApiClient["default"].convertToType(data['deliverStandbyEvents'], 'Boolean');
        }
        if (data.hasOwnProperty('nextSwitchboardIntegrationId')) {
          obj['nextSwitchboardIntegrationId'] = _ApiClient["default"].convertToType(data['nextSwitchboardIntegrationId'], 'String');
        }
        if (data.hasOwnProperty('messageHistoryCount')) {
          obj['messageHistoryCount'] = _ApiClient["default"].convertToType(data['messageHistoryCount'], 'Number');
        }
      }
      return obj;
    }
  }]);
  return SwitchboardIntegrationCreateBody;
}();
/**
 * Identifier for use in control transfer protocols. Restricted to alphanumeric characters, `-` and `_`.
 * @member {String} name
 */
SwitchboardIntegrationCreateBody.prototype['name'] = undefined;

/**
 * The id of the integration to link to the switchboard integration. Must be used when linking a custom integration. One of `integrationId` or `integrationType` must be provided.
 * @member {String} integrationId
 */
SwitchboardIntegrationCreateBody.prototype['integrationId'] = undefined;

/**
 * The type of the integration to link to the switchboard integration. Must be used when linking an OAuth integration. One of `integrationId` or `integrationType` must be provided.
 * @member {String} integrationType
 */
SwitchboardIntegrationCreateBody.prototype['integrationType'] = undefined;

/**
 * @member {Boolean} deliverStandbyEvents
 */
SwitchboardIntegrationCreateBody.prototype['deliverStandbyEvents'] = undefined;

/**
 * @member {String} nextSwitchboardIntegrationId
 */
SwitchboardIntegrationCreateBody.prototype['nextSwitchboardIntegrationId'] = undefined;

/**
 * Number of messages to include in the message history context.
 * @member {Number} messageHistoryCount
 */
SwitchboardIntegrationCreateBody.prototype['messageHistoryCount'] = undefined;
var _default = SwitchboardIntegrationCreateBody;
exports["default"] = _default;